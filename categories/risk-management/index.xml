<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Risk Management on Smooth as consumption</title>
    <link>/categories/risk-management/</link>
    <description>Recent content in Risk Management on Smooth as consumption</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 21 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/risk-management/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Growth-at-Risk IMF Tool</title>
      <link>/posts/growth_at_risk/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/growth_at_risk/</guid>
      <description>body {text-align: justify}The International Monetary Fund (IMF) has been using Growth-at-Risk, a macro-econometric tool developed by them to assess risks to economic growth, in several article IV country reports (Albania, Portugal and Singapore 2018), Chapter 2 of the IMF Global Financial Conditions Report since October 2017 and so on. The tool is built taking the methodology developed in the AER April 2019 paper Vulnerable Growth. I have several disagreements about the statistical procedures used and the interpretation of the results in the AER paper, which you can read here in my working papers.</description>
    </item>
    
    <item>
      <title>Tests for correct specification of conditional densities</title>
      <link>/posts/rossi_cond_density_tests/</link>
      <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/rossi_cond_density_tests/</guid>
      <description>body {text-align: justify}I have implemented the statistical tests of Rossi and Sekhposyan (2019) in R. You can find the codes in the following Github repo. Two tests, a Kolmogorov-Smirnov test and an Cràmer-von Mises test, are implemented to assess the correct specification of rolling window conditional distribution out-of-sample forecasts, one and multiple steps ahead.
Thew hole idea of the test is the following: let \(X\) be a random variable with cdf \(F_X\) (with well defined \(F_X^{-1}\)).</description>
    </item>
    
    <item>
      <title>Acerbi &amp; Szekely Unconditional Expected Shortfall Test</title>
      <link>/posts/expectedshortfalltest/</link>
      <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/expectedshortfalltest/</guid>
      <description>body {text-align: justify}Python implementation of the Direct Expected Shortfall Test of Acerbi and Szekely (2014).I don’t know of any implementation of such test in Python. The test has been implemented in MatLab. The backtesting of Expected Shortfall has long been a dificult task due to the lack of elicitibility. The test I’ve implemented is the second test of Acerbi and Szekely and it’s full details are in the reference.</description>
    </item>
    
  </channel>
</rss>